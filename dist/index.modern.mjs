const t=(a,n)=>{const l=n.indexOf(".");if(l>=0){const o=n.substr(0,l),r=n.substr(l+1);return a[o]?t(a[o],r):null}return a[n]};var a={__proto__:null,arrayDiff:(t,a)=>({added:a.filter(a=>!(null!=t&&t.includes(a))),same:a.filter(a=>t.includes(a)),removed:t.filter(t=>!(null!=a&&a.includes(t)))}),arrayMove:(t,a,n)=>{const l=JSON.parse(JSON.stringify(t)),o=a+n;return o>t.length||o<0?t:(l[o]=l[a],l[a]=t[o],l)},getKey:t},n={math:{__proto__:null,mapValue:function(t,a,n,l,o){return l+(t-a)*(o-l)/(n-a)},degToRad:function(t){return t*(Math.PI/180)}},latLon:{__proto__:null,calculateDistance:function(t,a){const n=t=>t*Math.PI/180,l=n(t.lat),o=n(a.lat),r=n(a.lat-t.lat),e=n(a.lon-t.lon),s=Math.sin(r/2)*Math.sin(r/2)+Math.cos(l)*Math.cos(o)*Math.sin(e/2)*Math.sin(e/2);return 2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s))*6371*1e3}},mapTiles:{__proto__:null,latLonToMapTile:function(t,a,n){return{x:Math.floor((a+180)/360*Math.pow(2,n)),y:Math.floor((1-Math.log(Math.tan(t*Math.PI/180)+1/Math.cos(t*Math.PI/180))/Math.PI)/2*Math.pow(2,n)),z:n}},getTileWidthInMeters:function(t,a){const n=a*(Math.PI/180);return 40075016.686/2**t*Math.cos(n)}},array:a,files:{__proto__:null,b64toBlob:t=>fetch(t).then(t=>t.blob())}};export{n as default};
//# sourceMappingURL=index.modern.mjs.map
