const t=(e,a)=>{const n=a.indexOf(".");if(n>=0){const l=a.substr(0,n),o=a.substr(n+1);return e[l]?t(e[l],o):null}return e[a]};var e={__proto__:null,arrayDiff:(t,e)=>({added:e.filter(e=>!(null!=t&&t.includes(e))),same:e.filter(e=>t.includes(e)),removed:t.filter(t=>!(null!=e&&e.includes(t)))}),arrayMove:(t,e,a)=>{const n=JSON.parse(JSON.stringify(t)),l=e+a;return l>t.length||l<0?t:(n[l]=n[e],n[e]=t[l],n)},getKey:t},a={math:{__proto__:null,mapValue:function(t,e,a,n,l){return n+(t-e)*(l-n)/(a-e)},degToRad:function(t){return t*(Math.PI/180)}},latLon:{__proto__:null,calculateDistance:function(t,e){const a=t=>t*Math.PI/180,n=a(t.lat),l=a(e.lat),o=a(e.lat-t.lat),r=a(e.lon-t.lon),s=Math.sin(o/2)*Math.sin(o/2)+Math.cos(n)*Math.cos(l)*Math.sin(r/2)*Math.sin(r/2);return 2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s))*6371*1e3}},mapTiles:{__proto__:null,latLonToMapTile:function(t,e,a){return{x:Math.floor((e+180)/360*Math.pow(2,a)),y:Math.floor((1-Math.log(Math.tan(t*Math.PI/180)+1/Math.cos(t*Math.PI/180))/Math.PI)/2*Math.pow(2,a)),z:a}},getTileWidthInMeters:function(t,e){const a=e*(Math.PI/180);return 40075016.686/2**t*Math.cos(a)}},array:e,files:{__proto__:null,b64toBlob:t=>fetch(t).then(t=>t.blob())},calendar:{__proto__:null,getCalendar:(t,e)=>{const a=new Date(t,e-1,1),n=new Date(t,e,0),l=[[]],o=a.getDay()-1<0?6:a.getDay()-1;for(let a=0;a<o;a++){const n=new Date(t,e-1,1);n.setDate(n.getDate()-(o-a)),l[0][a]={date:n,day:n.getDay()-1<0?6:n.getDay()-1,YMD:{y:n.getFullYear(),m:n.getMonth()+1,d:n.getDate()},diffMonth:!0}}for(let a=0;a<n.getDate();a++){const n=o+a,r=Math.floor(n/7),s=n-7*r;l[r]||(l[r]=[]);const h=new Date(t,e-1,a+1);l[r][s]={date:h,day:h.getDay()-1<0?6:h.getDay()-1,YMD:{y:t,m:e,d:a+1}}}for(let a=0;7!==l[l.length-1].length;a++){const o=l[l.length-1],r=new Date(t,e-1,1);r.setDate(n.getDate()+a+1),o[o.length]={date:r,day:r.getDay()-1<0?6:r.getDay()-1,YMD:{y:r.getFullYear(),m:r.getMonth()+1,d:r.getDate()},diffMonth:!0}}return l}}};export{a as default};
//# sourceMappingURL=index.modern.mjs.map
